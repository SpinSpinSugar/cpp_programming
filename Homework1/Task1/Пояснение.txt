Докажем максимальность:
Максимальный размер представлен в структуре Big - 64 байта, т.к. всего 8 полей, каждое из которых занимает <= 8 байт (как указатель, double, ull). Пусть остальные выравниваются по максимальному размеру, поэтому верхняя оценка 8*8 байт = 64 байта.

Нижняя оценка = 44: сложим sizeof-ы типов, будто бы храним их в Union:
union U {
    char e;                  1 байт
    char c[3];               3 байта
    float g;                 4 байта 
    int b;                   4 байта
    double f;                8 байт
    float* h;                8 байт
    int* a;                  8 байт
    unsigned long long d;    8 байт
                             = 44 байта
};

Рассмотрим простейшую структуру:
struct A {
    char a;                  1 байта
    char b[3];               3 байта
    int b;                   4 байта + выравнивание 4 байта до sizeof(double)
    double c;                8 байта
};
Любая перестановка полей даёт не меньший размер структуры.



Таким образом, в самом оптимистичном случае, мы получим одно выравнивание:

struct Small {
    char e;                  1 байт
    char c[3];               3 байта
    float g;                 4 байта 
    int b;                   4 байта + выравнивание 4 байта до sizeof(double)
    double f;                8 байт
    float* h;                8 байт
    int* a;                  8 байт
    unsigned long long d;    8 байт
                             = 44 + 4 байта = 48 байт
};

Для проверки запустим отладчик gdb:
1. make debug
2. gdb ./Task1
3. b 28
4. r
5. p sizeof(big) - выведет 64
6. x/16x &big (выведем 16 блоков по 4 байта, т.к. sizeof(big) = 64)
7. p sizeof(small) - выведет 48
8. x/12x &small (выведем 12 блоков по 4 байта, т.к. sizeof(small) = 48)

Результат на скриншоте GDB_CHECK.png